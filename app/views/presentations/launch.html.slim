.reveal
  .state-background
  .slides
    section class="slide" data-slide-num="0"
      p align="center"
        h3= @presentation.name
        h4= "http://twitter.com/#{@presentation.user.nickname}"
    - @presentation.slides.each_with_index do |slide,i|
      section data-slide-num="#{i+1}"
        - slide.contents.each do |content|
          div class="slide-content #{content.content_type.name.downcase}"
            = output_content(content)
  aside class="controls"
    a class="left" href="#"
      | &#x25C4;
    a class="right" href="#"
      | &#x25BA;
    a class="up" href="#"
      | &#x25B2;
    a class="down" href="#"
      | &#x25BC;

  .progress
    span
  

= javascript_include_tag "reveal.min"


- if current_user.id == @presentation.user_id
  javascript:

    $(function() {
    	console.log('-- YOU ARE PRESENTER')
      

    	var presentation_id = $('body').data('presentation_id');
      // connect to server like normal
      var dispatcher = new WebSocketRails('localhost:5000/websocket');
    	var channel = dispatcher.subscribe('party_'+presentation_id);


      $('body').click(function() {
        dispatcher.trigger('control_show', {"slide": 1})
        console.log("dispatcher.trigger('control_show', {'slide': 1})")
      })


      console.log(channel)
      // bind to a channel event
      channel.bind('new_client', function(data) {
        $('#debug').append('channel event received: ' + data + '\n');
      });

      Reveal.initialize({
          controls: true,
          progress: true,
          history: true,
          
          theme: Reveal.getQueryHash().theme || 'default', // available themes are in /css/theme
          transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/linear(2d)
  
          // Optional libraries used to extend on reveal.js
          dependencies: [
                        { src: 'http://amoose.github.io/presentations/lib/js/highlight.js', async: true, callback: function() { window.hljs.initHighlightingOnLoad(); } },
                        { src: 'http://amoose.github.io/presentations/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                        { src: 'http://amoose.github.io/presentations/lib/js/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                        { src: 'http://amoose.github.io/presentations/lib/js/data-markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          ]
        });

      Reveal.addEventListener( 'slidechanged', function( event ) {
          // event.previousSlide, event.currentSlide, event.indexh, event.indexv
        // new_slide = event.currentSlide
        //console.log(event.currentSlide)
        $slide = $(event.currentSlide)
        message = $slide.data('slide-num');
        console.log($slide)
        dispatcher.trigger('control_show', message);
        console.log('slide changed to: '+message)
      });
    });
    

- else
  javascript:
    var presentation_id = $('body').data('presentation_id');
    $(function() {
			// $.deck('.slide');
      var presentation_id = $('body').data('presentation_id');
      var dispatcher = new WebSocketRails('localhost:5000/websocket');

      // subscribe to the channel
      var channel = dispatcher.subscribe('party_'+presentation_id);

      console.log(channel)
      // bind to a channel event
      channel.bind('control_show', function(data) {
        //console.log('channel event received: ' + data);
        $('#debug').append(data)
        //$('#goto-slide').val(data.slide)
      });

      channel.bind('move_deck', function(data) {
        $('#debug').append(data)
      })

      // REVEAL
      Reveal.initialize({
          controls: false,
          progress: true,
          history: true,
          
          theme: Reveal.getQueryHash().theme || 'default', // available themes are in /css/theme
          transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/linear(2d)
  
          // Optional libraries used to extend on reveal.js
          dependencies: [
                        { src: 'http://amoose.github.io/presentations/lib/js/highlight.js', async: true, callback: function() { window.hljs.initHighlightingOnLoad(); } },
                        { src: 'http://amoose.github.io/presentations/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                        { src: 'http://amoose.github.io/presentations/lib/js/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                        { src: 'http://amoose.github.io/presentations/lib/js/data-markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          ]
        });
    })