# Scaffolding generated by Casein v5.0.0.0

module Casein
  class PresentationsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Presentations'
  		@presentations = Presentation.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View presentation'
      @presentation = Presentation.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new presentation'
    	@presentation = Presentation.new
    end

    def create
      @presentation = Presentation.new presentation_params
    
      if @presentation.save
        flash[:notice] = 'Presentation created'
        redirect_to casein_presentations_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new presentation'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update presentation'
      
      @presentation = Presentation.find params[:id]
    
      if @presentation.update_attributes presentation_params
        flash[:notice] = 'Presentation has been updated'
        redirect_to casein_presentations_path
      else
        flash.now[:warning] = 'There were problems when trying to update this presentation'
        render :action => :show
      end
    end
 
    def destroy
      @presentation = Presentation.find params[:id]

      @presentation.destroy
      flash[:notice] = 'Presentation has been deleted'
      redirect_to casein_presentations_path
    end
  
    private
      
      def presentation_params
        params.require(:presentation).permit(:name, :description, :contents)
      end

  end
end